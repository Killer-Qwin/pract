#–ó–∞–¥–∞–Ω–∏–µ 2 (–ê—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏)

# a = int(input('—á—ë—Ç–Ω–æ–µ'))
# print(a*2)

#2
# a = int(input('–Ω–µ —á—ë—Ç–Ω–æ–µ'))
# print(a*3)

#3
# a = int(input('1 —á–µ–ª'))
# b = int(input('2 —á–µ–ª'))
# print(b-a-1)

#4
# a = int(input())
# b = int(input())
# for i in range(a|1, b+1, 2):
#     print(i, end=' ')

#5
# n = int(input('—à–∫–æ–ª—å–Ω–∏–∫–∏ '))
# k = int(input('—Ç—ã–±–ª–æ–∫–∏ '))
# print('–≤–∑—è–ª–∏', k // n)
# print('–æ—Å—Ç–∞–ª–æ—Å—å', k % n)

#6
# a = int(input('–¥—é–π–º—ã '))
# fut = a / 12
# ird = fut / 3
# mil = ird / 1760
# print(f'{mil}  –º–∏–ª–∏, {ird}  —è—Ä–¥—ã, {fut}  —Ñ—É—Ç—ã, {a}  –¥—é–π–º—ã')

#7
# a = int(input('–∫–æ–ø–µ–µ–∫ '))
# pol = a * 0.25
# alt = a / 3
# gr = a / 10
# rub = a / 100
# print(f'{rub} —Ä—É–±–ª–µ–π, {gr} –≥—Ä–∏–≤–µ–Ω, {alt} –∞–ª—Ç—ã–Ω–æ–≤, {pol} –ø–æ–ª—É—à–µ–∫')

#8
# import math
# a = int(input('–∫–≤–∞—Ä—Ç–∏—Ä–∞ '))
# print(math.ceil(a/4))

#9
# a = int(input('–±–æ—á–∫–∏ '))
# a1 = a * 40
# a2 = a1 * 10
# a3 = a2 * 10
# a4 = a3 * 2 
# print(f'{a1} –≤—ë–¥–µ—Ä, {a2} —à—Ç–æ—Ñ–æ–≤, {a3} —á–∞—Ä–æ–∫, {a4} —à–∫–∞–ª–∏–∫–æ–≤')

#10
# a = int(input('–≤–µ—Ä—à–∫–æ–≤ '))
# a2 = a / 4
# a3 = a / 16
# a4 = a / 48 
# print(f'{a4} —Å–∞–∂–µ–Ω–µ–π, {a3} –∞—Ä—à–∏–Ω, {a2} –ø—è–¥–µ–π, {a} –≤–µ—Ä—à–∫–æ–≤')

#11
# x = int(input('x'))
# y = int(input('y'))
# n = int(input('n'))
# print(n + (n-1) * y)

#12
# x = int(input("–í–≤–µ–¥–∏—Ç–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –¥–æ –±–ª–∏–∂–∞–π—à–µ–≥–æ —Ñ–æ–Ω–∞—Ä–Ω–æ–≥–æ —Å—Ç–æ–ª–±–∞ (–º): "))
# y = int(input("–í–≤–µ–¥–∏—Ç–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –º–µ–∂–¥—É —Ñ–æ–Ω–∞—Ä–Ω—ã–º–∏ —Å—Ç–æ–ª–±–∞–º–∏ (–º): "))
# z = int(input("–í–≤–µ–¥–∏—Ç–µ –¥–ª–∏–Ω—É –≤–∞—à–µ–≥–æ —à–∞–≥–∞ (–º): "))
# n = int(input("–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —à–∞–≥–æ–≤: "))
# print((x + n * z) // y)

#13
# L = int(input("–í–≤–µ–¥–∏—Ç–µ –¥–ª–∏–Ω—É –±—Ä–µ–≤–Ω–∞ (–º): "))
# x = int(input("–í–≤–µ–¥–∏—Ç–µ –¥–ª–∏–Ω—É –æ–¥–Ω–æ–≥–æ –∫—É—Å–∫–∞ (–º): "))
# print(L // x)

#14
# L = int(input("–í–≤–µ–¥–∏—Ç–µ –¥–ª–∏–Ω—É –±—Ä–µ–≤–Ω–∞ (–º): "))
# n = int(input("–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞—Å–ø–∏–ª–æ–≤ (–º–µ—Å—Ç): "))
# print(L / (n+1))


#15
# import math
# d = int(input("–í–≤–µ–¥–∏—Ç–µ –¥–∏–∞–º–µ—Ç—Ä —Ä–µ–∑–∏–Ω–æ–≤–æ–≥–æ –∫–æ–ª—å—Ü–∞ (–º): "))
# n = int(input("–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞—Å–ø–∏–ª–æ–≤ (–º–µ—Å—Ç): "))
# print(math.pi * d / (n-1))



#–ó–∞–¥–∞–Ω–∏–µ 3 (–°—Ç—Ä–æ–∫–∏)

# text = "–ú—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –Ω–∞—É—á–∏–º—Å—è –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞—Ç—å!"

# # 1. –í—ã–≤–æ–¥–∏–º —Ç—Ä–µ—Ç–∏–π —Å–∏–º–≤–æ–ª —ç—Ç–æ–π —Å—Ç—Ä–æ–∫–∏
# text1 = text[2]
# print(f"–¢—Ä–µ—Ç–∏–π —Å–∏–º–≤–æ–ª: {text1}")

# # 2. –í—ã–≤–æ–¥–∏–º –ø—Ä–µ–¥–ø–æ—Å–ª–µ–¥–Ω–∏–π —Å–∏–º–≤–æ–ª —ç—Ç–æ–π —Å—Ç—Ä–æ–∫–∏
# text2 = text[-2]
# print(f"–ü—Ä–µ–¥–ø–æ—Å–ª–µ–¥–Ω–∏–π —Å–∏–º–≤–æ–ª: {text2}")

# # 3. –í—ã–≤–æ–¥–∏–º –ø–µ—Ä–≤—ã–µ –ø—è—Ç—å —Å–∏–º–≤–æ–ª–æ–≤ —ç—Ç–æ–π —Å—Ç—Ä–æ–∫–∏
# text3 = text[:5]
# print(f"–ü–µ—Ä–≤—ã–µ –ø—è—Ç—å —Å–∏–º–≤–æ–ª–æ–≤: {text3}")

# # 4. –í—ã–≤–æ–¥–∏–º –≤—Å—é —Å—Ç—Ä–æ–∫—É, –∫—Ä–æ–º–µ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –¥–≤—É—Ö —Å–∏–º–≤–æ–ª–æ–≤
# text4 = text[:-2]
# print(f"–í—Å—è —Å—Ç—Ä–æ–∫–∞, –∫—Ä–æ–º–µ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –¥–≤—É—Ö —Å–∏–º–≤–æ–ª–æ–≤: {text4}")

# # 5. –í—ã–≤–æ–¥–∏–º –≤—Å–µ —Å–∏–º–≤–æ–ª—ã —Å —á—ë—Ç–Ω—ã–º–∏ –∏–Ω–¥–µ–∫—Å–∞–º–∏
# text5 = text[::2]
# print(f"–°–∏–º–≤–æ–ª—ã —Å —á—ë—Ç–Ω—ã–º–∏ –∏–Ω–¥–µ–∫—Å–∞–º–∏: {text5}")

# # 6. –í—ã–≤–æ–¥–∏–º –≤—Å–µ —Å–∏–º–≤–æ–ª—ã —Å –Ω–µ—á—ë—Ç–Ω—ã–º–∏ –∏–Ω–¥–µ–∫—Å–∞–º–∏
# text6 = text[1::2]
# print(f"–°–∏–º–≤–æ–ª—ã —Å –Ω–µ—á—ë—Ç–Ω—ã–º–∏ –∏–Ω–¥–µ–∫—Å–∞–º–∏: {text6}")

# # 7. –í—ã–≤–æ–¥–∏–º —á–µ—Ç—ã—Ä–µ —Å–∏–º–≤–æ–ª–∞ –∏–∑ —Ü–µ–Ω—Ç—Ä–∞ —Å—Ç—Ä–æ–∫–∏
# text7 = len(text) // 2
# print(f"–ß–µ—Ç—ã—Ä–µ —Å–∏–º–≤–æ–ª–∞ –∏–∑ —Ü–µ–Ω—Ç—Ä–∞ —Å—Ç—Ä–æ–∫–∏: {text[text7 - 2:text7 + 2]}")

# # 8. –í—ã–≤–æ–¥–∏–º —Å–∏–º–≤–æ–ª—ã —Å –∏–Ω–¥–µ–∫—Å–∞–º–∏, –∫—Ä–∞—Ç–Ω—ã–º–∏ —Ç—Ä—ë–º
# text8 = text[::3]
# print(f"–°–∏–º–≤–æ–ª—ã —Å –∏–Ω–¥–µ–∫—Å–∞–º–∏, –∫—Ä–∞—Ç–Ω—ã–º–∏ —Ç—Ä—ë–º: {text8}")

# # 9. –í—ã–≤–æ–¥–∏–º –≤—Å–µ —Å–∏–º–≤–æ–ª—ã –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
# text9 = text[::-1]
# print(f"–í—Å–µ —Å–∏–º–≤–æ–ª—ã –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ: {text9}")

# # 10. –í—ã–≤–æ–¥–∏–º –≤—Å–µ —Å–∏–º–≤–æ–ª—ã —Å—Ç—Ä–æ–∫–∏ —á–µ—Ä–µ–∑ –æ–¥–∏–Ω –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ, –Ω–∞—á–∏–Ω–∞—è —Å –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ
# text10 = text[::-1][::2]
# print(f"–í—Å–µ —Å–∏–º–≤–æ–ª—ã —á–µ—Ä–µ–∑ –æ–¥–∏–Ω –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ: {text10}")

# # 11. –£–¥–∞–ª—è–µ–º –≤—Ç–æ—Ä–æ–µ —Å–ª–æ–≤–æ –∏–∑ —Å—Ç—Ä–æ–∫–∏
# words = text.split()
# words.pop(1)
# text11 = ' '.join(words)
# print(f"–°—Ç—Ä–æ–∫–∞ –±–µ–∑ –≤—Ç–æ—Ä–æ–≥–æ —Å–ª–æ–≤–∞: {text11}")

# # 12. –ó–∞–º–µ–Ω—è–µ–º –≤—Ç–æ—Ä–æ–µ —Å–ª–æ–≤–æ –Ω–∞ —Å—Ç—Ä–æ–∫—É ¬´–Ω–∏–∫–æ–≥–¥–∞ –Ω–µ¬ª
# words[1] = "–Ω–∏–∫–æ–≥–¥–∞ –Ω–µ"  
# text12 = ' '.join(words)
# print(f"–°—Ç—Ä–æ–∫–∞ —Å –∑–∞–º–µ–Ω–æ–π –≤—Ç–æ—Ä–æ–≥–æ —Å–ª–æ–≤–∞: {text12}")

# # 13. –î–æ–±–∞–≤–ª—è–µ–º –≤ –∫–æ–Ω–µ—Ü —Å—Ç—Ä–æ–∫–∏ ¬´–Ω–∞ Python¬ª
# text13 = text + " –Ω–∞ Python"
# print(f"–°—Ç—Ä–æ–∫–∞ —Å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º –≤ –∫–æ–Ω–µ—Ü: {text13}")

# # 14. –°—Ç–∞–≤–∏–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–ª–æ–≤–æ –ø–µ—Ä–≤—ã–º –≤ —Å—Ç—Ä–æ–∫–µ
# text14 = ' '.join([words[-1]] + words[:-1])
# print(f"–°—Ç—Ä–æ–∫–∞ —Å –ø–æ—Å–ª–µ–¥–Ω–∏–º —Å–ª–æ–≤–æ–º –ø–µ—Ä–≤—ã–º: {text14}")

# # 15. –í—ã–≤–æ–¥–∏–º –¥–ª–∏–Ω—É –¥–∞–Ω–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
# text15 = len(text)
# print(f"–î–ª–∏–Ω–∞ –¥–∞–Ω–Ω–æ–π —Å—Ç—Ä–æ–∫–∏: {text15}")


# –ó–∞–¥–∞–Ω–∏–µ 5 (–£—Å–ª–æ–≤–Ω—ã–π –æ–ø–µ—Ä–∞—Ç–æ—Ä)

# 4. –ó–∞–ø—Ä–æ—Å–∏—Ç–µ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–≤–∞ —á–∏—Å–ª–∞

# num1 = float(input("–í–≤–µ–¥–∏—Ç–µ –ø–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ: "))
# num2 = float(input("–í–≤–µ–¥–∏—Ç–µ –≤—Ç–æ—Ä–æ–µ —á–∏—Å–ª–æ: "))

# if num1 > num2:
#     res = num1 - num2
#     print(f"–ü–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ –±–æ–ª—å—à–µ –≤—Ç–æ—Ä–æ–≥–æ. –†–∞–∑–Ω–∏—Ü–∞: {res}")
# elif num2 > num1:
#     res1 = num1 + num2
#     print(f"–í—Ç–æ—Ä–æ–µ —á–∏—Å–ª–æ –±–æ–ª—å—à–µ –ø–µ—Ä–≤–æ–≥–æ. –°—É–º–º–∞: {res1}")
# else:
#     print(f"–û–±–∞ —á–∏—Å–ª–∞ —Ä–∞–≤–Ω—ã: {num1}")



# 5. –ó–∞–ø—Ä–æ—Å–∏—Ç–µ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–≤–∞ —Ü–µ–ª—ã—Ö —á–∏—Å–ª–∞ ùëö –∏ ùëõ.
# m = int(input("–í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ m: "))
# n = int(input("–í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ n: "))

# if n != 0:  
#     if m % n == 0:
#         res = m // n
#         print(f"{m} –¥–µ–ª–∏—Ç—Å—è –Ω–∞ {n} –Ω–∞—Ü–µ–ª–æ. –ß–∞—Å—Ç–Ω–æ–µ: {res}")
#     else:
#         print(f"{m} –Ω–∞ {n} –Ω–∞—Ü–µ–ª–æ –Ω–µ –¥–µ–ª–∏—Ç—Å—è.")
# else:
#     print("–û—à–∏–±–∫–∞: –î–µ–ª–µ–Ω–∏–µ –Ω–∞ –Ω–æ–ª—å –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.")



# 6. –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –∫–≤–∞–¥—Ä–∞—Ç–Ω–æ–≥–æ —É—Ä–∞–≤–Ω–µ–Ω–∏—è ùëéùë•2 + ùëèùë• + ùëê = 0
# import math

# a = float(input("–í–≤–µ–¥–∏—Ç–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç a: "))
# b = float(input("–í–≤–µ–¥–∏—Ç–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç b: "))
# c = float(input("–í–≤–µ–¥–∏—Ç–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç c: "))

# D = b**2 - 4*a*c

# if D < 0:
#     print("–ö–æ—Ä–Ω–µ–π –Ω–µ—Ç.")
# elif D == 0:
#     x1 = -b / (2 * a)
#     print(f"–£—Ä–∞–≤–Ω–µ–Ω–∏–µ –∏–º–µ–µ—Ç –æ–¥–∏–Ω –∫–æ—Ä–µ–Ω—å: x1 = {x1}")
# else:
#     x1 = (-b + math.sqrt(D)) / (2 * a)
#     x2 = (-b - math.sqrt(D)) / (2 * a)
#     print(f"–£—Ä–∞–≤–Ω–µ–Ω–∏–µ –∏–º–µ–µ—Ç –¥–≤–∞ –∫–æ—Ä–Ω—è: x1 = {x1}, x2 = {x2}")




# 7. –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, —Ä–µ—à–∞—é—â—É—é –∫—É–±–∏—á–µ—Å–∫–æ–µ —É—Ä–∞–≤–Ω–µ–Ω–∏–µ –≤–∏–¥–∞ ùë¶3+ùëùùë¶+ùëû = 0
# import cmath


# p = float(input("–í–≤–µ–¥–∏—Ç–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç p: "))
# q = float(input("–í–≤–µ–¥–∏—Ç–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç q: "))


# D = (q / 2) ** 2 + (p / 3) ** 3

# if D > 0:
    
#     u1 = (-q / 2 + D ** 0.5) ** (1/3)
#     u2 = (-q / 2 - D ** 0.5) ** (1/3)
#     y1 = u1 + u2
#     print(f"–£—Ä–∞–≤–Ω–µ–Ω–∏–µ –∏–º–µ–µ—Ç –æ–¥–∏–Ω –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π –∫–æ—Ä–µ–Ω—å: y1 = {y1}")
# elif D == 0:
#  
#     y1 = - (3 * p) / (3 * (1 if p != 0 else 1e-10))
#     print(f"–£—Ä–∞–≤–Ω–µ–Ω–∏–µ –∏–º–µ–µ—Ç –æ–¥–∏–Ω —Ç—Ä–æ–π–Ω–æ–π –∫–æ—Ä–µ–Ω—å: y1 = {y1}")
# else:
#     r = (-q / 2) ** (1/3)
#     theta = cmath.phase(complex(-D ** 0.5, 0)) / 3
#     y1 = r * cmath.exp(complex(0, theta))
#     y2 = r * cmath.exp(complex(0, theta + (2 * cmath.pi / 3)))
#     y3 = r * cmath.exp(complex(0, theta - (2 * cmath.pi / 3)))
    
#     print(f"–£—Ä–∞–≤–Ω–µ–Ω–∏–µ –∏–º–µ–µ—Ç —Ç—Ä–∏ –∫–æ—Ä–Ω—è:")
#     print(f"y1 = {y1}")
#     print(f"y2 = {y2}")
#     print(f"y3 = {y3}")



# 8. –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ–≥–æ –≤–æ–∑—Ä–∞—Å—Ç

# age = int(input("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç (—Ü–µ–ª–æ–µ —á–∏—Å–ª–æ –ª–µ—Ç): "))


# if age < 0 or age > 120:
#     for _ in range(5):
#         print("–û—à–∏–±–∫–∞! –≠—Ç–æ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –¥–ª—è –ª—é–¥–µ–π!")
# elif 0 <= age < 7:
#     print("–í–∞–º –≤ –¥–µ—Ç—Å–∫–∏–π —Å–∞–¥")
# elif 7 <= age < 18:
#     print("–í–∞–º –≤ —à–∫–æ–ª—É")
# elif 18 <= age < 25:
#     print("–í–∞–º –≤ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ —É—á–µ–±–Ω–æ–µ –∑–∞–≤–µ–¥–µ–Ω–∏–µ")
# elif 25 <= age < 60:
#     print("–í–∞–º –Ω–∞ —Ä–∞–±–æ—Ç—É")
# elif 60 <= age <= 120:
#     print("–í–∞–º –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è –≤—ã–±–æ—Ä")


# 9. –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –Ω–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ.
# s = float(input("–°–∫–æ–ª—å–∫–æ –∫–∏–ª–æ–º–µ—Ç—Ä–æ–≤ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–µ—Ö–∞—Ç—å –Ω–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ? "))
# v = float(input("–°–∫–æ–ª—å–∫–æ –ª–∏—Ç—Ä–æ–≤ —Ç–æ–ø–ª–∏–≤–∞ —Ä–∞—Å—Ö–æ–¥—É–µ—Ç –∞–≤—Ç–æ–º–æ–±–∏–ª—å –Ω–∞ 100 –∫–∏–ª–æ–º–µ—Ç—Ä–æ–≤? "))
# t = float(input("–°–∫–æ–ª—å–∫–æ –ª–∏—Ç—Ä–æ–≤ —Ç–æ–ø–ª–∏–≤–∞ –≤ –≤–∞—à–µ–º –±–∞–∫–µ? "))

# res = (s / 100) * v

# if t >= res:
#     print(f"–î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ç–æ–ø–ª–∏–≤–∞ –¥–ª—è –ø–æ–µ–∑–¥–∫–∏. –í–∞–º –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è {res} –ª–∏—Ç—Ä–æ–≤.")
#     print("–í—ã —Å–º–æ–∂–µ—Ç–µ –ø—Ä–æ–µ—Ö–∞—Ç—å –∂–µ–ª–∞–µ–º–æ–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ.")
# else:
#     print(f"–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ç–æ–ø–ª–∏–≤–∞ –¥–ª—è –ø–æ–µ–∑–¥–∫–∏. –í–∞–º –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç {res - t} –ª–∏—Ç—Ä–æ–≤.")
#     print("–í—ã –Ω–µ —Å–º–æ–∂–µ—Ç–µ –ø—Ä–æ–µ—Ö–∞—Ç—å –∂–µ–ª–∞–µ–º–æ–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ.")\


# 10. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç —Ç—Ä–∏ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã—Ö —á–∏—Å–ª–∞
# a = float(input("–í–≤–µ–¥–∏—Ç–µ –¥–ª–∏–Ω—É —Å—Ç–æ—Ä–æ–Ω—ã a: "))
# b = float(input("–í–≤–µ–¥–∏—Ç–µ –¥–ª–∏–Ω—É —Å—Ç–æ—Ä–æ–Ω—ã b: "))
# c = float(input("–í–≤–µ–¥–∏—Ç–µ –¥–ª–∏–Ω—É —Å—Ç–æ—Ä–æ–Ω—ã c: "))

# if a + b <= c or a + c <= b or b + c <= a:
#     print("–¢–∞–∫–æ–≥–æ —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")
# else:
#     print("–¢–∞–∫–æ–π —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")
#     if a == b == c:
#         print("–¢—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫ —Ä–∞–≤–Ω–æ—Å—Ç–æ—Ä–æ–Ω–Ω–∏–π.")
#     elif a == b or b == c or a == c:
#         print("–¢—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫ —Ä–∞–≤–Ω–æ–±–µ–¥—Ä–µ–Ω–Ω—ã–π.")
#     else:
#         print("–¢—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫ —Ä–∞–∑–Ω–æ—Å—Ç–æ—Ä–æ–Ω–Ω–∏–π.")
#     if (a**2 + b**2 == c**2) or (a**2 + c**2 == b**2) or (b**2 + c**2 == a**2):
#         print("–¢—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω—ã–π.")



# 11. –ò–∑–≤–µ—Å—Ç–µ–Ω –≤–µ—Å –±–æ–∫—Å—ë—Ä–∞-–ª—é–±–∏—Ç–µ–ª—è
# ves = int(input("–í–≤–µ–¥–∏—Ç–µ –≤–µ—Å –±–æ–∫—Å—ë—Ä–∞ (–∫–≥): "))
# if ves < 60:
#     print("–õ–µ–≥–∫–∏–π –≤–µ—Å")
# elif 60 <= ves < 64:
#     print("–ü–µ—Ä–≤—ã–π –ø–æ–ª—É—Å—Ä–µ–¥–Ω–∏–π –≤–µ—Å") 
# elif 64 <= ves < 69:
#     print("–ü–æ–ª—É—Å—Ä–µ–¥–Ω–∏–π –≤–µ—Å") 
# else:
#     print("–í–µ—Å –∑–∞ –ø—Ä–µ–¥–µ–ª–∞–º–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π") 



# 12. –í —á–µ–º–ø–∏–æ–Ω–∞—Ç–µ –ø–æ —Ñ—É—Ç–±–æ–ª—É
# point = int(input("–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—á–∫–æ–≤, –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –∫–æ–º–∞–Ω–¥–æ–π: "))
# if point == 3:
#     print("–í—ã–∏–≥—Ä—ã—à") 
# elif point == 1:
#     print("–ù–∏—á—å—è") 
# elif point == 0:
#     print("–ü—Ä–æ–∏–≥—Ä—ã—à") 
# else:
#     print("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—á–∫–æ–≤") 


# 13. –°–æ—Å—Ç–∞–≤–∏—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø–æ—Ä—è–¥–∫–æ–≤–æ–≥–æ –Ω–æ–º–µ—Ä–∞ –¥–Ω—è –Ω–µ–¥–µ–ª–∏ (–æ—Ç 1 –¥–æ 7) 
# day = int(input("–í–≤–µ–¥–∏—Ç–µ –ø–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä –¥–Ω—è –Ω–µ–¥–µ–ª–∏ (–æ—Ç 1 –¥–æ 7): "))
# if day == 1:
#     print("–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫")
# elif day == 2:
#     print("–í—Ç–æ—Ä–Ω–∏–∫")
# elif day == 3:
#     print("–°—Ä–µ–¥–∞")
# elif day == 4:
#     print("–ß–µ—Ç–≤–µ—Ä–≥")
# elif day == 5:
#     print("–ü—è—Ç–Ω–∏—Ü–∞")
# elif day == 6:
#     print("–°—É–±–±–æ—Ç–∞")
# elif day == 7:
#     print("–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ")


# 14. –°–æ—Å—Ç–∞–≤–∏—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø–æ—Ä—è–¥–∫–æ–≤–æ–≥–æ –Ω–æ–º–µ—Ä–∞ –º–µ—Å—è—Ü–∞ (1, 2, ..., 12)
# day = int(input("–í–≤–µ–¥–∏—Ç–µ –ø–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä –¥–Ω—è –Ω–µ–¥–µ–ª–∏ (–æ—Ç 1 –¥–æ 7): "))
# if day == 1:
#     print("–Ø–Ω–≤–∞—Ä—å")
# elif day == 2:
#     print("–§–µ–≤—Ä–∞–ª—å")
# elif day == 3:
#     print("–ú–∞—Ä—Ç")
# elif day == 4:
#     print("–ê–ø—Ä–µ–ª—å")
# elif day == 5:
#     print("–ú–∞–π")
# elif day == 6:
#     print("–ò—é–Ω—å")
# elif day == 7:
#     print("–ò—é–ª—å")
# elif day == 8:
#     print("–ê–≤–≥—É—Å—Ç")
# elif day == 9:
#     print("–°–µ–Ω—Ç—è–±—Ä—å")
# elif day == 10:
#     print("–û–∫—Ç—è–±—Ä—å")
# elif day == 11:
#     print("–ù–æ—è–±—Ä—å")
# elif day == 12:
#     print("–î–µ–∫–∞–±—Ä—å")


# 15. –°–æ—Å—Ç–∞–≤–∏—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø–æ—Ä—è–¥–∫–æ–≤–æ–≥–æ –Ω–æ–º–µ—Ä–∞ –º–µ—Å—è—Ü–∞ (1, 2, ..., 12) 
# num = int(input("–í–≤–µ–¥–∏—Ç–µ –ø–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä –º–µ—Å—è—Ü–∞ (–æ—Ç 1 –¥–æ 12): "))
# if num == 1 or num == 2 or num == 12:
#     print("–ó–∏–º–∞") 
# elif num >= 3 and num <= 5:
#     print("–í–µ—Å–Ω–∞") 
# elif num >= 6 and num <= 8:
#     print("–õ–µ—Ç–æ") 
# elif num >= 9 and num <= 11:
#     print("–û—Å–µ–Ω—å") 





# –ó–∞–¥–∞–Ω–∏–µ 6 (–°–ø–∏—Å–∫–∏. –ö–æ—Ä—Ç–µ–∂–∏. –°–ª–æ–≤–∞—Ä–∏)
#1–°–ø–∏—Å–∫–∏

# listok1 = list(range(0, 101, 10))
# listok2 = list(range(0, 101, 10))
# listok2[-1] = 200
# e = listok1[:5] + listok2[5:]
# f = listok1[:5] + listok2[5:]
# f.append(210)
# f.append(220)
# print(listok1)
# print("–ó–∞–¥–∞–Ω–∏–µ a: ", listok1[1])
# print("–ó–∞–¥–∞–Ω–∏–µ a: ", listok2[4])
# print("–ó–∞–¥–∞–Ω–∏–µ b: ", listok1[1])
# print("–ó–∞–¥–∞–Ω–∏–µ c: ", listok2)
# print("–ó–∞–¥–∞–Ω–∏–µ d: ", listok1 + listok2)
# print("–ó–∞–¥–∞–Ω–∏–µ e: ", e)
# print("–ó–∞–¥–∞–Ω–∏–µ f: ", f)
# print("–ó–∞–¥–∞–Ω–∏–µ g: ", max(f), min(f))



# 2. –ö–æ—Ä—Ç–µ–∂–∏
# coll = 10
# num = tuple(range(1, coll + 1))
# suname = ("–ò–≤–∞–Ω–æ–≤", "–ü–µ—Ç—Ä–æ–≤", "–°–∏–¥–æ—Ä–æ–≤", "–ö—É–∑–Ω–µ—Ü–æ–≤", "–°–º–∏—Ä–Ω–æ–≤", "–ü–æ–ø–æ–≤", "–õ–µ–±–µ–¥–µ–≤", "–ö–æ–≤–∞–ª–µ–≤", "–ù–∏–∫–æ–ª–∞–µ–≤", "–ú–∏—Ö–∞–π–ª–æ–≤")
# print("–§–∞–º–∏–ª–∏—è —Å—Ç—É–¥–µ–Ω—Ç–∞ —Å –Ω–æ–º–µ—Ä–æ–º 5:", suname[4])  
# print("–≠–ª–µ–º–µ–Ω—Ç –≤–æ –≤—Ç–æ—Ä–æ–º –∫–æ—Ä—Ç–µ–∂–µ –ø–æ–¥ –Ω–æ–º–µ—Ä–æ–º 5:", suname[4])  
# sum_name = list(zip(num, suname))
# print("–û–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã–π –∫–æ—Ä—Ç–µ–∂:", list(zip(num, suname)))
# print("–°—Ä–µ–∑ –∏–∑ —Å–æ–µ–¥–∏–Ω–µ–Ω–Ω–æ–≥–æ –∫–æ—Ä—Ç–µ–∂–∞:", sum_name[2:6])


#3. –°–ª–æ–≤–∞—Ä–∏
# School = {
#     "1–∞": 25,
#     "1–±": 30,
#     "2–≤": 28,
#     "3–∞": 22,
#     "4–±": 35
# }

# print(School)
# #b
# class_name = input("–∫–ª–∞—Å—Å –∫–∞–∫–æ–π: ")
# if class_name in School:
#     print(f"–≤ {class_name} —É—á–∞—Ç—Å—è {School[class_name]}")
# else:
#     print("–¢–∞–∫–æ–≥–æ –∫–ª–∞—Å—Å–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")

# #c
# School["1–∞"] = 27
# School["2–≤"] = 31
# School["3–∞"] = 25

# print('–æ–±–Ω–æ–≤–∏–ª–∏', School)

# #d
# School["5–∞"] = 20
# School["6–±"] = 32
# print(School)

# e
# del School["4–±"]
# print(School)


# 3.6 –ó–∞–¥–∞–Ω–∏—è –Ω–∞ —Ü–∏–∫–ª—ã
# –ó–∞–¥–∞–Ω–∏–µ 7 (–ó–∞–¥–∞–Ω–∏—è –Ω–∞ —Ä–µ–∫—É—Ä—Ä–µ–Ω—Ç–Ω—ã–µ —Å–æ—Ç–Ω–æ—à–µ–Ω–∏—è)
# n = 5
# # a) 1, 2, 3, 4, ...
# a = [1 + i for i in range(n)]

# # b) 0, 5, 10, 15, ...
# b = [5 * i for i in range(n)]

# # c) 1, 1, 1, 1, ...
# c = [1] * n

# # d) 1, -1, 1, -1, ...
# d = [1 if i % 2 == 0 else -1 for i in range(n)]

# # e) 1, -2, 3, -4, ...
# e = [(-1)**i * (i + 1) for i in range(n)]

# # f) 2, 4, 8, 16, ...
# f = [2**i for i in range(n)]

# # g) 2, 4, 16, 256, ...
# g = [2**(2**i) for i in range(n)]

# # h) 0, 1, 2, 3, 0, ...
# h = [i % 4 for i in range(n)]

# # i) 1!, 3!, 5!, 7!, ...
# import math
# i = [math.factorial(2 * j + 1) for j in range(n)]

# print(a, b, c, d, e, f, g, h, i)



# –ó–∞–¥–∞–Ω–∏–µ 8 (–ó–∞–¥–∞–Ω–∏—è –Ω–∞ —Ü–∏–∫–ª —Å —É—Å–ª–æ–≤–∏–µ–º)
# 1. –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç —Å—É–º–º–∏—Ä–æ–≤–∞—Ç—å –≤–≤–æ–¥–∏–º—ã–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —á–∏—Å–ª–∞ –¥–æ —Ç–µ—Ö –ø–æ—Ä, –ø–æ–∫–∞ –æ–Ω–∏ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã.

# total = 0
# while True:
#     number = int(input("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ªa: "))
#     if number < 0:
#         break
#     total += number
# print("–°—É–º–º–∞ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã—Ö —á–∏—Å–µ–ª:", total)

# 2. –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç —Å—É–º–º–∏—Ä–æ–≤–∞—Ç—å –≤–≤–æ–¥–∏–º—ã–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —á–∏—Å–ª–∞ –¥–æ —Ç–µ—Ö –ø–æ—Ä, –ø–æ–∫–∞ –æ–Ω–∏ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã.
# total = 0
# while True:
#     number = int(input("–í–≤–µ–¥–∏—Ç–µ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª: "))
#     if number >= 0:
#         break
#     total += number
# print("–°—É–º–º–∞ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã—Ö —á–∏—Å–µ–ª:", total)

# 3. –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç —Å—É–º–º–∏—Ä–æ–≤–∞—Ç—å –≤–≤–æ–¥–∏–º—ã–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã

# total = 0
# while True:
#     number = float(input("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ: "))
#     if number == 0:
#         break
#     total += number
# print("–°—É–º–º–∞ –≤–≤–µ–¥—ë–Ω–Ω—ã—Ö —á–∏—Å–µ–ª:", total)

# 4. –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç —Å—É–º–º–∏—Ä–æ–≤–∞—Ç—å –≤–≤–æ–¥–∏–º—ã–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
# total = 0
# while True:
#     number = int(input("–í–≤–µ–¥–∏—Ç–µ —á—ë—Ç–Ω–æ–µ —á–∏—Å–ª–æ: "))
#     if number % 2 != 0:
#         break
#     total += number
# print("–°—É–º–º–∞ —á—ë—Ç–Ω—ã—Ö —á–∏—Å–µ–ª:", total)

# 5. –î–∞–Ω–æ —á–∏—Å–ª–æ ùëõ. –ù–∞–ø–µ—á–∞—Ç–∞—Ç—å —Ç–µ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã–µ —á–∏—Å–ª–∞, –∫–≤–∞–¥—Ä–∞—Ç –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ –ø—Ä–µ–≤—ã—à–∞–µ—Ç ùëõ.

# n = int(input("–í–≤–µ–¥–∏—Ç–µ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ n: "))
# i = 1
# while i * i <= n:
#     print(i)
#     i += 1

# 6. –î–∞–Ω–æ —á–∏—Å–ª–æ ùëõ. –ù–∞–π—Ç–∏ –ø–µ—Ä–≤–æ–µ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ, –∫–≤–∞–¥—Ä–∞—Ç –∫–æ—Ç–æ—Ä–æ–≥–æ –±–æ–ª—å—à–µ ùëõ.

# n = int(input("–í–≤–µ–¥–∏—Ç–µ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ n: "))
# i = 1
# while i * i <= n:
#     i += 1
# print(i)


# 7. –î–∞–Ω–æ —á–∏—Å–ª–æ ùëõ. –°—Ä–µ–¥–∏ —á–∏—Å–µ–ª
# n = float(input("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ n: "))
# s = 0  
# i = 1  
# while True:
#     s += 1 / i  
#     if s > n: 
#         print("–ü–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ, –±–æ–ª—å—à–µ–µ n:", s)
#         break   
#     i += 1 


# 8. –î–∞–Ω–æ —á–∏—Å–ª–æ ùëé (1 < ùëé < 1.5).
# a = float(input("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ a (1 <= a <= 1.5): "))
# s = 1  
# i = 2  

# while True:
#     s += 1 / i  
#     if s < a:  
#         print("–ü–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ, –º–µ–Ω—å—à–µ–µ a:", s)
#         break   
#     i += 1      


# # 9. –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
# sump = [-9999,]#–∫–∞—Å—Ç—ã–ª
# i = 0
# while True:
#     a = int(input('—á–∏—Å–ª–æ –±–æ–ª—å—à–µ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ'))
#     sump.append(a)
#     if sump[i] < sump[i+1]:
#         i += 1
#     else:
#         break
# print(sum(sump[1:-1]))


# 10. –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
# sump = [99999,]#–∫–∞—Å—Ç—ã–ª
# i = 0
# while True:
#     a = int(input('—á–∏—Å–ª–æ –±–æ–ª—å—à–µ menshe'))
#     sump.append(a)
#     if sump[i] > sump[i+1]:
#         i += 1
#     else:
#         break
# print(len(sump[1:-1]))

# 11. –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –∑–∞–ø—Ä–∞—à–∏–≤
# sump = []
# while True:
#     try:
#         a = int(input())
#         sump.append(a)
#     except:
#         print(len(sump))
#         break


# 12
# count = 0

# while True:
#     number = float(input("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ: "))
    
#     if number < 10:
#         count += 1 
#     else:
#         break  
# print("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–≤–µ–¥—ë–Ω–Ω—ã—Ö —á–∏—Å–µ–ª:", count)


#13
# number = input("–í–≤–µ–¥–∏—Ç–µ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ —Ü–∏—Ñ—Ä–∞–º–∏: ")
# max_digit = number[0]  
# index_from_start = 1  
# index_from_end = len(number)  

# for i in range(len(number)):
#     if number[i] > max_digit:  
#         max_digit = number[i]
#         index_from_start = i + 1  
#         index_from_end = len(number) - i  

# print(f"–ü–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Ü–∏—Ñ—Ä—ã {max_digit}:")
# print(f"–û—Ç –Ω–∞—á–∞–ª–∞: {index_from_start}")
# print(f"–û—Ç –∫–æ–Ω—Ü–∞: {index_from_end}")


# 14
# number = input("–í–≤–µ–¥–∏—Ç–µ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ —Ü–∏—Ñ—Ä–∞–º–∏: ")
# min_digit = number[0] 
# index_from_start = 1    
# index_from_end = len(number)  

# for i in range(len(number)):
#     if number[i] < min_digit:  
#         min_digit = number[i]
#         index_from_start = i + 1  
#         index_from_end = len(number) - i  

# print(f"–ü–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π —Ü–∏—Ñ—Ä—ã {min_digit}:")
# print(f"–û—Ç –Ω–∞—á–∞–ª–∞: {index_from_start}")
# print(f"–û—Ç –∫–æ–Ω—Ü–∞: {index_from_end}")


# 15
# number = input("–í–≤–µ–¥–∏—Ç–µ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ: ")
# max_digit = max(number)
# count_max_digit = number.count(max_digit)
# print(f"–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ü–∏—Ñ—Ä–∞ {max_digit} –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è {count_max_digit} —Ä–∞–∑(–∞) –≤ —á–∏—Å–ª–µ {number}.")


# –ó–∞–¥–∞–Ω–∏–µ 9 (–ó–∞–¥–∞–Ω–∏—è –Ω–∞ —Ü–∏–∫–ª —Å–æ —Å—á—ë—Ç—á–∏–∫–æ–º)

# 1
# num = 0
# for i in range(1, 91):
#     if i % 2 == 0: 
#         num += i  
# print(f"–°—É–º–º–∞ –≤—Å–µ—Ö —á–µ—Ç–Ω—ã—Ö —á–∏—Å–µ–ª –æ—Ç 1 –¥–æ 90 –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ: {num}")


#2
# a = int(input("–í–≤–µ–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ a: "))
# b = int(input("–í–≤–µ–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ b: "))
# count = 0
# for i in range(a, b + 1):
#     if i % 2 == 0:  
#         count += i  
# print(f"–°—É–º–º–∞ –≤—Å–µ—Ö —á–µ—Ç–Ω—ã—Ö —á–∏—Å–µ–ª –æ—Ç {a} –¥–æ {b} –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ: {count}")

#3
# count = 0
# for i in range(1, 91):
#     if i % 2 != 0: 
#         count += i  
# print(f"–°—É–º–º–∞ –≤—Å–µ—Ö –Ω–µ—á—ë—Ç–Ω—ã—Ö —á–∏—Å–µ–ª –æ—Ç 1 –¥–æ 90 –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ: {count}")

#4

# a = int(input("–í–≤–µ–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ a: "))
# b = int(input("–í–≤–µ–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ b: "))

# count = 0

# for i in range(a, b + 1):
#     if i % 2 != 0: 
#         count += i  
# print(f"–°—É–º–º–∞ –≤—Å–µ—Ö –Ω–µ—á—ë—Ç–Ω—ã—Ö —á–∏—Å–µ–ª –æ—Ç {a} –¥–æ {b} –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ: {count}")

# 5
# for i in range(1, 10):
#     print(f"{i} x 5 = {i*5}")


# 6
# for i in range(1, 10):
#     print(f"{i} x 9 = {i*9}")

# 7
# n = int(input('–ß–∏—Å–ª–æ –æ—Ç 1 –¥–æ 9: '))
# for i in range(1, 10):
#     print(f"{i} x 9 = {i*9}")


# 8
# price= int(input("–í–≤–µ–¥–∏—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å 1 –∫–≥ —Å—ã—Ä–∞ (–≤ —Ä—É–±–ª—è—Ö): "))
# for i in range(50, 1001, 50):
#     res = (i / 1000) * price
#     print(f"{i} –≥—Ä–∞–º - {res} —Ä—É–±–ª–µ–π")


# 9
# price= int(input("–í–≤–µ–¥–∏—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å 1 –∫–≥ —Å—ã—Ä–∞ (–≤ —Ä—É–±–ª—è—Ö): "))
# for i in range(100, 2001, 100):
#     res = (i / 1000) * price
#     print(f"{i} –≥—Ä–∞–º - {res} —Ä—É–±–ª–µ–π")


# 10
# count = 0
# for i in range(10, 101):
#     count += i  
# print(f"–°—É–º–º–∞ –≤—Å–µ—Ö —Ü–µ–ª—ã—Ö —á–∏—Å–µ–ª –æ—Ç 10 –¥–æ 100: {count}")


# 11
# a = 10
# l = 100
# n = l - a + 1
# numbers = n * (a + l) // 2
# print(f"–°—É–º–º–∞ –≤—Å–µ—Ö —Ü–µ–ª—ã—Ö —á–∏—Å–µ–ª –æ—Ç {a} –¥–æ {l}: {numbers}")


# 12
# b = int(input("–í–≤–µ–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ b: "))

# count = 0

# for i in range(10, b + 1):
#     count += i 

# print(f"–°—É–º–º–∞ –≤—Å–µ—Ö —Ü–µ–ª—ã—Ö —á–∏—Å–µ–ª –æ—Ç 10 –¥–æ {b}: {count}")


# 13
# a = int(input("–í–≤–µ–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ a: "))
# b = int(input("–í–≤–µ–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ b: "))

# count = 0

# for i in range(a, b + 1):
#     count += i

# print(f"–°—É–º–º–∞ –≤—Å–µ—Ö —Ü–µ–ª—ã—Ö —á–∏—Å–µ–ª –æ—Ç {a} –¥–æ {b}: {count}")


# 14
# count = 1

# for i in range(10, 101):
#     count *= i  

# print(f"–ü—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –≤—Å–µ—Ö —Ü–µ–ª—ã—Ö —á–∏—Å–µ–ª –æ—Ç 10 –¥–æ 100: {count}")


# 15
# a = int(input("–í–≤–µ–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ a: "))
# b = int(input("–í–≤–µ–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ b: "))

# count = 1

# for i in range(a, b + 1):
#     count *= i  

# print(f"–ü—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –≤—Å–µ—Ö —Ü–µ–ª—ã—Ö —á–∏—Å–µ–ª –æ—Ç {a} –¥–æ {b}: {count}")




# –ì–ª–∞–≤–∞ 4
# –ú–∞—Å—Å–∏–≤—ã. –ú–æ–¥—É–ª—å numpy

# –ó–∞–¥–∞–Ω–∏–µ 11
#1
# import numpy as np

# array_10 = np.zeros(10)
# array_55 = np.zeros(55)

# matrix_3x4 = np.zeros((3, 4))

# array_3d = np.zeros((2, 4, 5))

# np.savetxt('array_10.txt', array_10)
# np.savetxt('array_55.txt', array_55)
# np.savetxt('matrix_3x4.txt', matrix_3x4)
# np.savetxt('array_3d.txt', array_3d.reshape(-1, 5)) 
# print(array_10)


#6
# import numpy as np
# import math

# e = math.e

# step = e / 50
# array_range = np.arange(-e, e + step, step)

# print("–°–æ–∑–¥–∞–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤:")
# print(array_range)
# np.savetxt('array_range.txt', array_range)


#11
# import numpy as np
# array = np.array([[i] * 5 for i in range(1, 6)])
# np.savetxt('array11.txt', array)
# print(array)


# –ó–∞–¥–∞–Ω–∏–µ 12 –ó–∞–¥–∞–Ω–∏—è –≤—ã–ø–æ–ª–Ω—è–π—Ç–µ –≤—Å–µ –ø–æ –ø–æ—Ä—è–¥–∫—É.
# import numpy as np


# matrix = np.loadtxt('array_range.txt')

# if matrix.ndim == 1:
#     matrix = matrix.reshape(-1, 1)  

# print("–ó–∞–≥—Ä—É–∂–µ–Ω–Ω–∞—è –º–∞—Ç—Ä–∏—Ü–∞:")
# print(matrix)


# vector = np.arange(0, matrix.shape[0])  

# result_matrix = matrix + vector[:, np.newaxis]  

# print("–†–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–∞—è –º–∞—Ç—Ä–∏—Ü–∞ –ø–æ—Å–ª–µ –ø—Ä–∏–±–∞–≤–ª–µ–Ω–∏—è –≤–µ–∫—Ç–æ—Ä–∞:")
# print(result_matrix)

# max_element = np.max(result_matrix)
# min_element = np.min(result_matrix)

# print(f"–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç: {max_element}")
# print(f"–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç: {min_element}")

# row_sums = np.sum(result_matrix, axis=1)
# print("–°—É–º–º–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ø–æ –∫–∞–∂–¥–æ–π —Å—Ç—Ä–æ–∫–µ:")
# print(row_sums)

# np.savetxt('result_matrix.txt', result_matrix)
# np.savetxt('vector.txt', vector)

# print("–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ —Ñ–∞–π–ª—ã 'result_matrix.txt' –∏ 'vector.txt'.")


# –ì–ª–∞–≤–∞ 5
# –ì—Ä–∞—Ñ–∏–∫–∏. –ú–æ–¥—É–ª—å matplotlib


# –ó–∞–¥–∞–Ω–∏–µ 14 - 15
# import matplotlib.pyplot as plt
# import numpy as np

# x = np.linspace(-2, 2, 100)
# y = x**2
# plt.plot(x, y, color='red', linewidth=20)
# plt.plot(x, y)
# plt.xlabel("x")
# plt.ylabel("f(x)")
# plt.grid(True)
# plt.show()

# –ó–∞–¥–∞–Ω–∏–µ 16-17

import numpy as np
import matplotlib.pyplot as plt


x = np.linspace(-1, 1, 100)


fig, axs = plt.subplots(6, 1, figsize=(6, 12))  # 6 —Å—Ç—Ä–æ–∫ –∏ 1 —Å—Ç–æ–ª–±–µ—Ü


for degree in range(1, 7):  # –°—Ç–µ–ø–µ–Ω–∏ –æ—Ç 1 –¥–æ 6
    y = x ** degree  # –í—ã—á–∏—Å–ª—è–µ–º y –¥–ª—è —Ç–µ–∫—É—â–µ–π —Å—Ç–µ–ø–µ–Ω–∏
    axs[degree - 1].plot(x, y)  # –î–æ–±–∞–≤–ª—è–µ–º –ª–∏–Ω–∏—é –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –ø–æ–¥–≥—Ä–∞—Ñ–∏–∫
    axs[degree - 1].set_title(f'$f(x) = x^{degree}$')  # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–¥–≥—Ä–∞—Ñ–∏–∫–∞
    axs[degree - 1].grid(True)  # –í–∫–ª—é—á–∞–µ–º —Å–µ—Ç–∫—É
    axs[degree - 1].set_xlim(-1, 1)  # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –æ—Å—å x
    axs[degree - 1].set_ylim(-1, 1)  # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –æ—Å—å y
    axs[degree - 1].set_xlabel("x")  # –ü–æ–¥–ø–∏—Å—å –æ—Å–∏ x
    axs[degree - 1].set_ylabel("f(x)")  # –ü–æ–¥–ø–∏—Å—å –æ—Å–∏ y


plt.suptitle("–°—Ç–µ–ø–µ–Ω–Ω—ã–µ –æ–¥–Ω–æ—á–ª–µ–Ω—ã –æ—Ç $x^1$ –¥–æ $x^6$", fontsize=16)

plt.tight_layout(rect=[0, 0.03, 1, 0.95])  # –£–ø–ª–æ—Ç–Ω—è–µ–º –≥—Ä–∞—Ñ–∏–∫–∏ –∏ –æ—Å—Ç–∞–≤–ª—è–µ–º –º–µ—Å—Ç–æ –¥–ª—è –æ–±—â–µ–≥–æ –∑–∞–≥–æ–ª–æ–≤–∫–∞
plt.show()




# –ó–∞–¥–∞–Ω–∏–µ 18

# import matplotlib.pyplot as plt

# labels = ['–°—Ç—É–¥–µ–Ω—Ç—ã —Å –ø—è—Ç—ë—Ä–∫–∞–º–∏', '–°—Ç—É–¥–µ–Ω—Ç—ã —Å –¥—Ä—É–≥–∏–º–∏ –æ—Ü–µ–Ω–∫–∞–º–∏']
# sizes = [15, 5]  
# colors = ['#ff9999', '#66b3ff']  
# explode = (0.1, 0)  


# plt.figure(figsize=(8, 6))
# plt.pie(sizes, explode=explode, labels=labels, colors=colors,
#         autopct='%1.1f%%', shadow=True, startangle=140)

# plt.axis('equal')  
# plt.title('–î–æ–ª–∏ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –≥—Ä—É–ø–ø—ã, —Å–¥–∞–≤—à–∏—Ö —Å–µ—Å—Å–∏—é –Ω–∞ –æ–¥–Ω–∏ –ø—è—Ç—ë—Ä–∫–∏')
# plt.show()

# –ó–∞–¥–∞–Ω–∏–µ 19
# import numpy as np
# import matplotlib.pyplot as plt
# from mpl_toolkits.mplot3d import Axes3D

# # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–∏–∞–ø–∞–∑–æ–Ω –∑–Ω–∞—á–µ–Ω–∏–π –¥–ª—è x –∏ y
# x = np.linspace(-3, 3, 100)
# y = np.linspace(-3, 3, 100)

# # –°–æ–∑–¥–∞–µ–º —Å–µ—Ç–∫—É –∑–Ω–∞—á–µ–Ω–∏–π
# X, Y = np.meshgrid(x, y)
# Z = X**3 + Y**3  # –í—ã—á–∏—Å–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏

# # –°–æ–∑–¥–∞–Ω–∏–µ —Ç—Ä—ë—Ö–º–µ—Ä–Ω–æ–≥–æ –≥—Ä–∞—Ñ–∏–∫–∞
# fig = plt.figure(figsize=(12, 6))

# # –ü–æ–¥–≥—Ä–∞—Ñ–∏–∫ –¥–ª—è —Ç—Ä—ë—Ö–º–µ—Ä–Ω–æ–≥–æ –≥—Ä–∞—Ñ–∏–∫–∞
# ax1 = fig.add_subplot(121, projection='3d')
# ax1.plot_surface(X, Y, Z, cmap='viridis', edgecolor='none')
# ax1.set_title('–¢—Ä—ë—Ö–º–µ—Ä–Ω—ã–π –≥—Ä–∞—Ñ–∏–∫ $z = x^3 + y^3$')
# ax1.set_xlabel('X')
# ax1.set_ylabel('Y')
# ax1.set_zlabel('Z')

# # –ü–æ–¥–≥—Ä–∞—Ñ–∏–∫ –¥–ª—è –∑–∞–∫—Ä–∞—à–µ–Ω–Ω–æ–π –∫–æ–Ω—Ç—É—Ä–Ω–æ–π –¥–∏–∞–≥—Ä–∞–º–º—ã
# ax2 = fig.add_subplot(122)
# contour = ax2.contourf(X, Y, Z, cmap='viridis')  # –ó–∞–∫—Ä–∞—à–µ–Ω–Ω–∞—è –∫–æ–Ω—Ç—É—Ä–Ω–∞—è –¥–∏–∞–≥—Ä–∞–º–º–∞
# ax2.set_title('–ö–æ–Ω—Ç—É—Ä–Ω–∞—è –¥–∏–∞–≥—Ä–∞–º–º–∞ $z = x^3 + y^3$')
# ax2.set_xlabel('X')
# ax2.set_ylabel('Y')
# plt.colorbar(contour)  # –î–æ–±–∞–≤–ª—è–µ–º —Ü–≤–µ—Ç–æ–≤—É—é —à–∫–∞–ª—É

# # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–æ–≤
# plt.tight_layout()
# plt.show()



# –ó–∞–¥–∞–Ω–∏–µ 20 –†–∞–±–æ—Ç–∞ —Å —Ç–µ–∫—Å—Ç–æ–≤—ã–º–∏ —Ñ–∞–π–ª–∞–º–∏.
import numpy as np

# with open('output.txt', 'w') as file:
#     file.write("–ß–∏—Å–ª–æ\t–ö–≤–∞–¥—Ä–∞—Ç\t–ö—É–±\n")
#     for i in range(1, 101):
#         square = i ** 2
#         cube = i ** 3
#         file.write(f"{i}\t{square}\t{cube}\n")




# 2

# with open('trigonometric.txt', 'w') as file:
#     file.write("x\tsin(x)\tcos(x)\n")
#     step = np.pi / 24
#     x_values = np.arange(0, 2 * np.pi, step)

#     for x in x_values:
#         sin_value = np.sin(x)
#         cos_value = np.cos(x)
#         file.write(f"{x:.4f}\t{sin_value:.4f}\t{cos_value:.4f}\n")



# 3
# with open('–ó–∞—á—ë—Ç.txt', 'w', encoding='utf-8') as file:
#     num_students = int(input("–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–µ–Ω–∏–∫–æ–≤ –≤ –≤–∞—à–µ–π –≥—Ä—É–ø–ø–µ: "))

#     for i in range(num_students):
#         full_name = input(f"–í–≤–µ–¥–∏—Ç–µ –§–∞–º–∏–ª–∏—é –ò–º—è –û—Ç—á–µ—Å—Ç–≤–æ –¥–ª—è —É—á–µ–Ω–∏–∫–∞ {i + 1}: ")
#         grade = input("–í–≤–µ–¥–∏—Ç–µ –æ—Ü–µ–Ω–∫—É: ")
#         file.write(f"{full_name}\t{grade}\n")

# print("–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–∞–Ω—ã –≤ —Ñ–∞–π–ª '–ó–∞—á—ë—Ç.txt'.")


# 4
# try:
#     with open('–ó–∞—á—ë—Ç.txt', 'r', encoding='utf-8') as file:
#         surname = input("–í–≤–µ–¥–∏—Ç–µ —Ñ–∞–º–∏–ª–∏—é —É—á–µ–Ω–∏–∫–∞: ")
#         found = False
        
#         for line in file:
#             full_name, grade = line.strip().split('\t')
#             if full_name.startswith(surname):
#                 print(f"–û—Ü–µ–Ω–∫–∞ –¥–ª—è {full_name}: {grade}")
#                 found = True
#                 break
        
#         if not found:
#             print(f"–£—á–µ–Ω–∏–∫ —Å —Ñ–∞–º–∏–ª–∏–µ–π '{surname}' –Ω–µ –Ω–∞–π–¥–µ–Ω.")
# except FileNotFoundError:
#     print("–§–∞–π–ª '–ó–∞—á—ë—Ç.txt' –Ω–µ –Ω–∞–π–¥–µ–Ω.")